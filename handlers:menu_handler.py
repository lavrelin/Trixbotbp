from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from config import Config
import logging

logger = logging.getLogger(__name__)

async def handle_menu_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle menu callbacks"""
    query = update.callback_query
    await query.answer()
    
    data = query.data.split(":")
    action = data[1] if len(data) > 1 else None
    
    if action == "budapest":
        await show_budapest_menu(update, context)
    elif action == "search":
        await start_search(update, context)
    elif action == "offers":
        await start_offers(update, context)
    elif action == "piar":
        await start_piar(update, context)
    elif action == "profile":
        from handlers.profile_handler import show_profile
        await show_profile(update, context)
    elif action == "help":
        from handlers.start_handler import help_command
        await help_command(update, context)
    elif action == "back":
        from handlers.start_handler import show_main_menu
        await show_main_menu(update, context)
    elif action == "announcements":
        await show_announcements_menu(update, context)
    elif action == "news":
        await start_category_post(update, context, "üóØÔ∏è –ë—É–¥–∞–ø–µ—à—Ç", "üì∫ –ù–æ–≤–æ—Å—Ç–∏")
    elif action == "overheard":
        await start_category_post(update, context, "üóØÔ∏è –ë—É–¥–∞–ø–µ—à—Ç", "ü§ê –ü–æ–¥—Å–ª—É—à–∞–Ω–æ", anonymous=True)
    elif action == "complaints":
        await start_category_post(update, context, "üóØÔ∏è –ë—É–¥–∞–ø–µ—à—Ç", "ü§Æ –ñ–∞–ª–æ–±—ã", anonymous=True)

async def show_budapest_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Show Budapest category menu"""
    keyboard = [
        [InlineKeyboardButton("üó£Ô∏è –û–±—ä—è–≤–ª–µ–Ω–∏—è", callback_data="menu:announcements")],
        [InlineKeyboardButton("üì∫ –ù–æ–≤–æ—Å—Ç–∏", callback_data="menu:news")],
        [InlineKeyboardButton("ü§ê –ü–æ–¥—Å–ª—É—à–∞–Ω–æ (–∞–Ω–æ–Ω–∏–º–Ω–æ)", callback_data="menu:overheard")],
        [InlineKeyboardButton("ü§Æ –ñ–∞–ª–æ–±—ã (–∞–Ω–æ–Ω–∏–º–Ω–æ)", callback_data="menu:complaints")],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="menu:back")]
    ]
    
    text = (
        "üóØÔ∏è *–ë—É–¥–∞–ø–µ—à—Ç*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:\n\n"
        "üó£Ô∏è *–û–±—ä—è–≤–ª–µ–Ω–∏—è* - —Ä–∞–±–æ—Ç–∞, –∞—Ä–µ–Ω–¥–∞, –∫—É–ø–ª—è/–ø—Ä–æ–¥–∞–∂–∞\n"
        "üì∫ *–ù–æ–≤–æ—Å—Ç–∏* - –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
        "ü§ê *–ü–æ–¥—Å–ª—É—à–∞–Ω–æ* - –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏\n