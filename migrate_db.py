#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –ë–î - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª–µ–π
–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python migrate_db.py
"""

import asyncio
import asyncpg
import os
from dotenv import load_dotenv

load_dotenv()

DATABASE_URL = os.getenv("DATABASE_URL")

async def migrate_database():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è –≤ –ë–î"""
    
    if not DATABASE_URL:
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        conn = await asyncpg.connect(DATABASE_URL)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ")
        
        # –°–ø–∏—Å–æ–∫ –º–∏–≥—Ä–∞—Ü–∏–π
        migrations = [
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è piar
            "ALTER TABLE posts ADD COLUMN IF NOT EXISTS piar_instagram VARCHAR(255);",
            "ALTER TABLE posts ADD COLUMN IF NOT EXISTS piar_telegram VARCHAR(255);",
            
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ piar_contacts –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
            "ALTER TABLE posts DROP COLUMN IF EXISTS piar_contacts;",
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
            """
            DO $$ 
            BEGIN
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                              WHERE table_name='posts' AND column_name='piar_instagram') THEN
                    ALTER TABLE posts ADD COLUMN piar_instagram VARCHAR(255);
                END IF;
                
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                              WHERE table_name='posts' AND column_name='piar_telegram') THEN
                    ALTER TABLE posts ADD COLUMN piar_telegram VARCHAR(255);
                END IF;
            END $$;
            """
        ]
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
        for i, migration in enumerate(migrations):
            try:
                await conn.execute(migration)
                print(f"‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è {i+1} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
            except Exception as e:
                print(f"‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏—è {i+1} –ø—Ä–æ–ø—É—â–µ–Ω–∞: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        result = await conn.fetch("""
            SELECT column_name, data_type 
            FROM information_schema.columns 
            WHERE table_name = 'posts' 
            ORDER BY ordinal_position;
        """)
        
        print("\nüìã –¢–µ–∫—É—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã posts:")
        for row in result:
            print(f"  - {row['column_name']}: {row['data_type']}")
        
        await conn.close()
        print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    asyncio.run(migrate_database())
