from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import logging
import secrets
import string

logger = logging.getLogger(__name__)

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle /start command with safe DB handling"""
    user_id = update.effective_user.id
    username = update.effective_user.username
    first_name = update.effective_user.first_name
    last_name = update.effective_user.last_name
    
    # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î, –Ω–æ –Ω–µ –ø–∞–¥–∞–µ–º –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
    try:
        from services.db import db
        from models import User, Gender
        from sqlalchemy import select
        from datetime import datetime
        
        async with db.get_session() as session:
            # Check if user exists
            result = await session.execute(
                select(User).where(User.id == user_id)
            )
            user = result.scalar_one_or_none()
            
            if not user:
                # Create new user immediately with default values
                new_user = User(
                    id=user_id,
                    username=username,
                    first_name=first_name,
                    last_name=last_name,
                    gender=Gender.UNKNOWN,
                    referral_code=generate_referral_code(),
                    created_at=datetime.utcnow()
                )
                session.add(new_user)
                await session.commit()
                logger.info(f"Created new user: {user_id}")
                
    except Exception as e:
        logger.warning(f"Could not save user to DB: {e}")
        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –±–µ–∑ –ë–î
    
    # Always show main menu
    await show_main_menu(update, context)

async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Show main menu with updated order"""
    keyboard = [
        [InlineKeyboardButton("üóØÔ∏è –ë—É–¥–∞–ø–µ—à—Ç", callback_data="menu:budapest")],
        [InlineKeyboardButton("üíº –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É—Å–ª—É–≥—É", callback_data="menu:services")],
        [InlineKeyboardButton("üìö –ö–∞—Ç–∞–ª–æ–≥", callback_data="menu:catalog")],
        [
            InlineKeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="menu:profile"),
            InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="menu:help")
        ]
    ]
    
    text = (
        "üè† *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:\n\n"
        "üóØÔ∏è *–ë—É–¥–∞–ø–µ—à—Ç* - –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –Ω–æ–≤–æ—Å—Ç–∏, –ø–æ–¥—Å–ª—É—à–∞–Ω–æ\n"
        "üíº *–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É—Å–ª—É–≥—É* - –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞\n"
        "üìö *–ö–∞—Ç–∞–ª–æ–≥* - –∫–∞—Ç–∞–ª–æ–≥ —É—Å–ª—É–≥ –∏ —Ç–æ–≤–∞—Ä–æ–≤\n"
    )
    
    try:
        if update.callback_query:
            await update.callback_query.edit_message_text(
                text,
                reply_markup=InlineKeyboardMarkup(keyboard),
                parse_mode='Markdown'
            )
        else:
            await update.effective_message.reply_text(
                text,
                reply_markup=InlineKeyboardMarkup(keyboard),
                parse_mode='Markdown'
            )
    except Exception as e:
        logger.error(f"Error showing main menu: {e}")
        # Fallback –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        try:
            await update.effective_message.reply_text(
                "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
                reply_markup=InlineKeyboardMarkup(keyboard)
            )
        except Exception as e2:
            logger.error(f"Fallback menu also failed: {e2}")
            # –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback - –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await update.effective_message.reply_text(
                "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞."
            )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Handle /help command with links to community"""
    keyboard = [
        [InlineKeyboardButton("üì∫ –ö–∞–Ω–∞–ª SNGHU", url="https://t.me/snghu")],
        [InlineKeyboardButton("üí¨ –ß–∞—Ç –¥–ª—è –æ–±—â–µ–Ω–∏—è", url="https://t.me/tgchatxxx")],
        [InlineKeyboardButton("üìö –ö–∞—Ç–∞–ª–æ–≥ —É—Å–ª—É–≥", url="https://t.me/trixvault")],
        [InlineKeyboardButton("‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu:back")]
    ]
    
    help_text = (
        "üìñ *–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞*\n\n"
        "üî∏ /start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "üî∏ /profile - –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n"
        "üî∏ /help - —ç—Ç–∞ –ø–æ–º–æ—â—å\n\n"
        "*–ö–∞–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç:*\n"
        "1. –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é (–µ—Å–ª–∏ –µ—Å—Ç—å)\n"
        "3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏/–∏–ª–∏ –º–µ–¥–∏–∞\n"
        "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä\n"
        "5. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é\n\n"
        "*–ü—Ä–∞–≤–∏–ª–∞:*\n"
        "‚Ä¢ –ú–µ–∂–¥—É –ø–æ—Å—Ç–∞–º–∏ –º–∏–Ω–∏–º—É–º 94 –º–∏–Ω—É—Ç—ã\n"
        "‚Ä¢ –ó–∞–ø—Ä–µ—â–µ–Ω—ã —Å—Å—ã–ª–∫–∏\n"
        "‚Ä¢ –í—Å–µ –ø–æ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é\n\n"
        "*–ù–∞—à–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ:*\n"
        "üì∫ –ì–ª–∞–≤–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–π\n"
        "üí¨ –ß–∞—Ç –¥–ª—è –∂–∏–≤–æ–≥–æ –æ–±—â–µ–Ω–∏—è\n"
        "üìö –ö–∞—Ç–∞–ª–æ–≥ –≤—Å–µ—Ö —É—Å–ª—É–≥ –∏ —Ç–æ–≤–∞—Ä–æ–≤"
    )
    
    try:
        if update.callback_query:
            await update.callback_query.edit_message_text(
                help_text,
                reply_markup=InlineKeyboardMarkup(keyboard),
                parse_mode='Markdown'
            )
        else:
            await update.effective_message.reply_text(
                help_text,
                reply_markup=InlineKeyboardMarkup(keyboard),
                parse_mode='Markdown'
            )
    except Exception as e:
        logger.error(f"Error showing help: {e}")
        # Fallback –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await update.effective_message.reply_text(
            "–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞\n\n"
            "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/help - —ç—Ç–∞ –ø–æ–º–æ—â—å\n\n"
            "–í—Å–µ –ø–æ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç –º–æ–¥–µ—Ä–∞—Ü–∏—é.",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

def generate_referral_code():
    """Generate unique referral code"""
    return ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(8))
