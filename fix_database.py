#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü–æ–ª–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –ë–î –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º
–ó–∞–ø—É—Å—Ç–∏—Ç–µ: python fix_database.py
"""

import asyncio
import asyncpg
import os
from dotenv import load_dotenv

load_dotenv()

DATABASE_URL = os.getenv("DATABASE_URL")

async def fix_database():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ –ë–î"""
    
    if not DATABASE_URL:
        print("‚ùå DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        return
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
        conn = await asyncpg.connect(DATABASE_URL)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É users
        users_columns = await conn.fetch("""
            SELECT column_name, data_type, is_nullable
            FROM information_schema.columns 
            WHERE table_name = 'users'
            ORDER BY ordinal_position;
        """)
        
        print("üìã –°—Ç–æ–ª–±—Ü—ã —Ç–∞–±–ª–∏—Ü—ã users:")
        for col in users_columns:
            print(f"  - {col['column_name']}: {col['data_type']} ({'NULL' if col['is_nullable'] == 'YES' else 'NOT NULL'})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É posts
        posts_columns = await conn.fetch("""
            SELECT column_name, data_type, is_nullable
            FROM information_schema.columns 
            WHERE table_name = 'posts'
            ORDER BY ordinal_position;
        """)
        
        print("üìã –°—Ç–æ–ª–±—Ü—ã —Ç–∞–±–ª–∏—Ü—ã posts:")
        for col in posts_columns:
            print(f"  - {col['column_name']}: {col['data_type']} ({'NULL' if col['is_nullable'] == 'YES' else 'NOT NULL'})")
        
        print("\nüîß –í—ã–ø–æ–ª–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
        
        # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–∏–≥—Ä–∞—Ü–∏–π
        migrations = [
            # 1. –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
            "ALTER TABLE users DROP COLUMN IF EXISTS updated_at;",
            "ALTER TABLE posts DROP COLUMN IF EXISTS updated_at;",
            
            # 2. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è –¥–ª—è piar –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
            """
            DO $$ 
            BEGIN
                -- –î–æ–±–∞–≤–ª—è–µ–º piar_instagram
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                              WHERE table_name='posts' AND column_name='piar_instagram') THEN
                    ALTER TABLE posts ADD COLUMN piar_instagram VARCHAR(255);
                    RAISE NOTICE '–î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü piar_instagram';
                END IF;
                
                -- –î–æ–±–∞–≤–ª—è–µ–º piar_telegram
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                              WHERE table_name='posts' AND column_name='piar_telegram') THEN
                    ALTER TABLE posts ADD COLUMN piar_telegram VARCHAR(255);
                    RAISE NOTICE '–î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü piar_telegram';
                END IF;
                
                -- –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ contacts –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
                IF EXISTS (SELECT 1 FROM information_schema.columns 
                          WHERE table_name='posts' AND column_name='piar_contacts') THEN
                    ALTER TABLE posts DROP COLUMN piar_contacts;
                    RAISE NOTICE '–£–¥–∞–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü piar_contacts';
                END IF;
                
                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                              WHERE table_name='posts' AND column_name='is_piar') THEN
                    ALTER TABLE posts ADD COLUMN is_piar BOOLEAN DEFAULT FALSE;
                    RAISE NOTICE '–î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü is_piar';
                END IF;
                
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                              WHERE table_name='posts' AND column_name='piar_name') THEN
                    ALTER TABLE posts ADD COLUMN piar_name VARCHAR(255);
                    RAISE NOTICE '–î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü piar_name';
                END IF;
                
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                              WHERE table_name='posts' AND column_name='piar_profession') THEN
                    ALTER TABLE posts ADD COLUMN piar_profession VARCHAR(255);
                    RAISE NOTICE '–î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü piar_profession';
                END IF;
                
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                              WHERE table_name='posts' AND column_name='piar_districts') THEN
                    ALTER TABLE posts ADD COLUMN piar_districts JSON;
                    RAISE NOTICE '–î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü piar_districts';
                END IF;
                
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                              WHERE table_name='posts' AND column_name='piar_phone') THEN
                    ALTER TABLE posts ADD COLUMN piar_phone VARCHAR(255);
                    RAISE NOTICE '–î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü piar_phone';
                END IF;
                
                IF NOT EXISTS (SELECT 1 FROM information_schema.columns 
                              WHERE table_name='posts' AND column_name='piar_price') THEN
                    ALTER TABLE posts ADD COLUMN piar_price VARCHAR(255);
                    RAISE NOTICE '–î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü piar_price';
                END IF;
            END $$;
            """,
            
            # 3. –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            """
            DO $$
            BEGIN
                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å—Ç–æ–ª–±—Ü–∞ media
                IF EXISTS (SELECT 1 FROM information_schema.columns 
                          WHERE table_name='posts' AND column_name='media' 
                          AND data_type != 'json') THEN
                    ALTER TABLE posts ALTER COLUMN media TYPE JSON USING media::JSON;
                    RAISE NOTICE '–û–±–Ω–æ–≤–ª–µ–Ω —Ç–∏–ø —Å—Ç–æ–ª–±—Ü–∞ media –Ω–∞ JSON';
                END IF;
                
                -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å—Ç–æ–ª–±—Ü–∞ hashtags
                IF EXISTS (SELECT 1 FROM information_schema.columns 
                          WHERE table_name='posts' AND column_name='hashtags' 
                          AND data_type != 'json') THEN
                    ALTER TABLE posts ALTER COLUMN hashtags TYPE JSON USING hashtags::JSON;
                    RAISE NOTICE '–û–±–Ω–æ–≤–ª–µ–Ω —Ç–∏–ø —Å—Ç–æ–ª–±—Ü–∞ hashtags –Ω–∞ JSON';
                END IF;
            END $$;
            """
        ]
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
        for i, migration in enumerate(migrations):
            try:
                await conn.execute(migration)
                print(f"‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è {i+1} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
            except Exception as e:
                print(f"‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏—è {i+1} –ø—Ä–æ–ø—É—â–µ–Ω–∞: {e}")
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        print("\nüìã –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã posts:")
        final_posts = await conn.fetch("""
            SELECT column_name, data_type 
            FROM information_schema.columns 
            WHERE table_name = 'posts' 
            ORDER BY ordinal_position;
        """)
        
        for row in final_posts:
            print(f"  ‚úì {row['column_name']}: {row['data_type']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        users_count = await conn.fetchval("SELECT COUNT(*) FROM users")
        posts_count = await conn.fetchval("SELECT COUNT(*) FROM posts")
        
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
        print(f"  –ü–æ—Å—Ç–æ–≤: {posts_count}")
        
        await conn.close()
        print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
        print("‚úÖ –¢–µ–ø–µ—Ä—å –±–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    asyncio.run(fix_database())
